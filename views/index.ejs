<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ecommerce</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Estilos personalizados */
        .cart-dropdown {
            position: fixed;
            top: 60px;
            right: 10px;
            max-width: 250px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 10px;
            display: none;
            z-index: 1000;
        }

        .cart-dropdown.open {
            display: block;
        }
    </style>
</head>
<body>
    <!-- Barra de navegación -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="#">Ecommerce</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/addProducts">Agregar Producto</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register">Registrarse</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="toggleCartDropdown()">Carrito</a>
                    </li>
                    <li class="nav-item" id="login-nav-item">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                    <li class="nav-item" id="logout-nav-item" style="display:none;">
                        <a class="nav-link" href="#" onclick="logout()">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Contenido principal -->
    <div class="container mt-4">
        <h1>Lista de Productos</h1>
        <div id="user-info" style="display:none;">
            <p>Bienvenido, <span id="username"></span></p>
        </div>
        <div class="row" id="lista-productos"></div>
    </div>

    <!-- Carrito desplegable -->
    <div id="cart-dropdown" class="cart-dropdown">
        <h2>Mi Carrito</h2>
        <ul id="lista-carrito" class="list-group"></ul>
        <button id="complete-cart" class="btn btn-primary mt-3">Completar Compra</button>
    </div>

    <!-- Bootstrap JS (opcional, solo si necesitas funcionalidad de Bootstrap) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const token = localStorage.getItem('token');
            if (token) {
                axios.get('/api/verifyToken', { headers: { 'Authorization': `Bearer ${token}` } })
                    .then(response => {
                        if (response.data.valid) {
                            document.getElementById('username').innerText = response.data.user.username;
                            document.getElementById('user-info').style.display = 'block';
                            document.getElementById('login-nav-item').style.display = 'none';
                            document.getElementById('logout-nav-item').style.display = 'block';
                            obtenerCarrito();
                        } else {
                            localStorage.removeItem('token');
                            window.location.href = '/login';
                        }
                    })
                    .catch(error => {
                        localStorage.removeItem('token');
                        window.location.href = '/login';
                    });
            } else {
                window.location.href = '/login';
            }
        });

        // Función para logout
        function logout() {
            localStorage.removeItem('token');
            window.location.href = '/login';
        }

        // Obtener productos mediante Axios
        axios.get('/api/productos')
            .then(response => {
                const productos = response.data;
                const listaProductos = document.getElementById('lista-productos');
                
                productos.forEach(producto => {
                    const card = `
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">${producto.title}</h5>
                                    <p class="card-text">$${producto.price}</p>
                                    <button class="btn btn-primary" onclick="agregarAlCarrito('${producto._id}')">Agregar al Carrito</button>
                                </div>
                            </div>
                        </div>
                    `;
                    listaProductos.innerHTML += card;
                });
            })
            .catch(error => {
                console.error('Error al obtener la lista de productos:', error);
            });

        // Función para agregar productos al carrito
        function agregarAlCarrito(productId) {
            const token = localStorage.getItem('token');
            if (!token) {
                window.location.href = '/login';
                return;
            }
            axios.post('/carts/add', { productId, quantity: 1 }, { headers: { 'Authorization': `Bearer ${token}` } })
                .then(response => {
                    console.log('Producto agregado al carrito:', response.data);
                    obtenerCarrito();
                })
                .catch(error => {
                    console.error('Error al agregar producto al carrito:', error);
                });
        }

        // Función para obtener el carrito del usuario
        function obtenerCarrito() {
            const token = localStorage.getItem('token');
            if (!token) {
                window.location.href = '/login';
                return;
            }
            axios.get('/carts', { headers: { 'Authorization': `Bearer ${token}` } })
                .then(response => {
                    const carrito = response.data;
                    const listaCarrito = document.getElementById('lista-carrito');
                    listaCarrito.innerHTML = '';

                    carrito.items.forEach(item => {
                        const listItem = document.createElement('li');
                        listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                        listItem.innerHTML = `
                            <span>${item.product.title} - Cantidad: ${item.quantity}</span>
                            <button class="btn btn-danger btn-sm" onclick="eliminarDelCarrito('${item._id}')">Eliminar</button>
                        `;
                        listaCarrito.appendChild(listItem);
                    });
                })
                .catch(error => {
                    console.error('Error al obtener el carrito:', error);
                });
        }

        // Función para eliminar productos del carrito
        function eliminarDelCarrito(itemId) {
            const token = localStorage.getItem('token');
            axios.delete(`/carts/remove/${itemId}`, { headers: { 'Authorization': `Bearer ${token}` } })
                .then(response => {
                    console.log('Producto eliminado del carrito:', response.data);
                    obtenerCarrito();
                })
                .catch(error => {
                    console.error('Error al eliminar producto del carrito:', error);
                });
        }

        // Función para completar el carrito
        document.getElementById('complete-cart').addEventListener('click', () => {
            const token = localStorage.getItem('token');
            axios.post('/carts/complete', {}, { headers: { 'Authorization': `Bearer ${token}` } })
                .then(response => {
                    console.log('Compra completada:', response.data);
                    obtenerCarrito();
                })
                .catch(error => {
                    console.error('Error al completar la compra:', error);
                });
        });

        // Función para mostrar u ocultar el carrito desplegable
        function toggleCartDropdown() {
            const cartDropdown = document.getElementById('cart-dropdown');
            cartDropdown.classList.toggle('open');
        }

        obtenerCarrito();
    </script>
</body>
</html>
